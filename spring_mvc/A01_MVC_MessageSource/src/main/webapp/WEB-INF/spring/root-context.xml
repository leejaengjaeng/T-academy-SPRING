<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	
	<!-- 
	Spring에서 Message Properties를 사용하기 위한 방법
	1.ResourceBundleMessageSource: 
		java.util.ResourceBundle과 jajva.util.Properties를 기반으로 하고 있는데, 이들은 ISO-8859-1 이외의 파일 인코딩을 다룰 수 없다.
		MessageSource가 변경될 때마다 서버를 재시작하는 것은 피곤한 일이다. 변경이 거의 없는 실 운영시 사용할 만하다.
	2.ReloadableResourceBundleMessageSource: Properties 파일이 변경되었을 경우에도 다시 시작할 필요가 없다. 한번 읽어들인 메시지를 Cache에 저장해 둔다.
		MessageSource파일을 변경후 서버 재시작 없이 반영되는지를 확인해 보자.
	 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:properties/message</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<!-- fallbackToSystemLocale' property가 true인 경우, locale에 해당하는 file이 없을 경우 system locale을 사용 -->
		<property name="fallbackToSystemLocale" value="true" />
	</bean>
	
	<!-- 
	localeResolver의 종류는 3가지가 있다. AcceptHeaderLocaleResolver, CookieLocaleResolver, SessionLocaleResolver
	기본설정은 org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver 이다.
	AcceptHeaderLocaleResolver은 reqest 헤더의 accept-language부분에서 locale을 읽어온다.
	 -->
	<!-- 
	 사용자들이 사용하고자 하는 Locale을 직접 선택할 수 있도록 구현 한다. SessionLocaleResolver 사용하도록 설정한다.
	 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="ko" />
	</bean>
</beans>
